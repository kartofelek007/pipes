{"mappings":"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","sources":["src/ts/tile-types.ts","src/ts/eventObserver.ts","src/ts/pipe-class.ts","src/ts/drag-drop-class.ts","src/ts/page-class.ts","src/ts/levels.ts","src/ts/level-class.ts","src/ts/_debug-class.ts","src/ts/app.ts","src/ts/level-select-class.ts","src/ts/start-page-class.ts","src/ts/end-level-class.ts"],"sourcesContent":["//check - czy w danej petli zostal juz sprawdzony. uzywane po to by ktos nie zrobic zapetlonego spradzania\r\n//active - czy dany tile pasuje i moze leciec woda\r\n//icon - ikona z levelu\r\n//poinst - wezwy wyjscia uzywane przy spradzaniu czy dwa klocki sie lacza\r\n//inactive - czy dany klocek moze byc klikany\r\n//type - typ klocka - uzywane przy przelaczaniu danego klocka\r\n\r\nexport type TileType = {\r\n    check: boolean,\r\n    active: boolean,\r\n    icon: string,\r\n    points: string,\r\n    inactive: boolean,\r\n    type: number,\r\n    types: Array<number>\r\n}\r\n\r\nexport type TilesTypesType = Array<TileType>\r\n\r\nconst tileOb = {\r\n    check: false,\r\n    active: false\r\n}\r\n\r\nconst tileTypes: TilesTypesType = [\r\n    {...tileOb, icon: \"x\", points: \"\", inactive: true, type: -1, types: [-1]},\r\n    {...tileOb, icon: \" \", points: \"\", inactive: true, type: 0, types: [0]},\r\n\r\n    {...tileOb, icon: \"←\", points: \"L\", inactive: true, type: 1, types: [1, 2, 3, 4]},\r\n    {...tileOb, icon: \"↑\", points: \"T\", inactive: true, type: 2, types: [1, 2, 3, 4]},\r\n    {...tileOb, icon: \"→\", points: \"R\", inactive: true, type: 3, types: [1, 2, 3, 4]},\r\n    {...tileOb, icon: \"↓\", points: \"B\", inactive: true, type: 4, types: [1, 2, 3, 4]},\r\n\r\n    {...tileOb, icon: \"│\", points: \"TB\", inactive: false, type: 5, types: [5, 6]},\r\n    {...tileOb, icon: \"─\", points: \"LR\", inactive: false, type: 6, types: [5, 6]},\r\n\r\n    {...tileOb, icon: \"┘\", points: \"LT\", inactive: false, type: 7, types: [7, 8, 9, 10]},\r\n    {...tileOb, icon: \"└\", points: \"RT\", inactive: false, type: 8, types: [7, 8, 9, 10]},\r\n    {...tileOb, icon: \"┌\", points: \"RB\", inactive: false, type: 9, types: [7, 8, 9, 10]},\r\n    {...tileOb, icon: \"┐\", points: \"LB\", inactive: false, type: 10, types: [7, 8, 9, 10]},\r\n\r\n    {...tileOb, icon: \"┤\", points: \"LTB\", inactive: false, type: 11, types: [11, 12, 13, 14]},\r\n    {...tileOb, icon: \"┴\", points: \"LRT\", inactive: false, type: 12, types: [11, 12, 13, 14]},\r\n    {...tileOb, icon: \"├\", points: \"RTB\", inactive: false, type: 13, types: [11, 12, 13, 14]},\r\n    {...tileOb, icon: \"┬\", points: \"LRB\", inactive: false, type: 14, types: [11, 12, 13, 14]},\r\n\r\n    {...tileOb, icon: \"┼\", points: \"LRTB\", inactive: true, type: 15, types: [15]},\r\n\r\n    {...tileOb, icon: \"◄\", points: \"L\", inactive: true, type: 16, types: [16, 17, 18, 19]},\r\n    {...tileOb, icon: \"▲\", points: \"T\", inactive: true, type: 17, types: [16, 17, 18, 19]},\r\n    {...tileOb, icon: \"►\", points: \"R\", inactive: true, type: 18, types: [16, 17, 18, 19]},\r\n    {...tileOb, icon: \"▼\", points: \"B\", inactive: true, type: 19, types: [16, 17, 18, 19]},\r\n\r\n    {...tileOb, icon: \"╥\", points: \"B\", inactive: true, type: 20, types: [20, 21, 22, 23]},\r\n    {...tileOb, icon: \"╡\", points: \"L\", inactive: true, type: 21, types: [20, 21, 22, 23]},\r\n    {...tileOb, icon: \"╨\", points: \"T\", inactive: true, type: 22, types: [20, 21, 22, 23]},\r\n    {...tileOb, icon: \"╞\", points: \"R\", inactive: true, type: 23, types: [20, 21, 22, 23]},\r\n\r\n    {...tileOb, icon: \"║\", points: \"TB\", inactive: true, type: 24, types: [24, 25]},\r\n    {...tileOb, icon: \"═\", points: \"LR\", inactive: true, type: 25, types: [24, 25]},\r\n\r\n    {...tileOb, icon: \"╝\", points: \"LT\", inactive: true, type: 26, types: [26, 27, 28, 29]},\r\n    {...tileOb, icon: \"╚\", points: \"RT\", inactive: true, type: 27, types: [26, 27, 28, 29]},\r\n    {...tileOb, icon: \"╔\", points: \"RB\", inactive: true, type: 28, types: [26, 27, 28, 29]},\r\n    {...tileOb, icon: \"╗\", points: \"LB\", inactive: true, type: 29, types: [26, 27, 28, 29]},\r\n\r\n    {...tileOb, icon: \"b\", points: \"\", inactive: true, type: 30, types: [30, 31]},\r\n    {...tileOb, icon: \"B\", points: \"\", inactive: true, type: 31, types: [30, 31]},\r\n\r\n    {...tileOb, icon: \"●\", points: \"\", inactive: true, type: 40, types: [40]},\r\n]\r\n\r\nconst typesWithPointLeft = tileTypes.filter(tile => tile.points && tile.points.includes(\"L\")).map(tile => tile.type);\r\nconst typesWithPointRight = tileTypes.filter(tile => tile.points && tile.points.includes(\"R\")).map(tile => tile.type);\r\nconst typesWithPointTop = tileTypes.filter(tile => tile.points && tile.points.includes(\"T\")).map(tile => tile.type);\r\nconst typesWithPointBottom = tileTypes.filter(tile => tile.points && tile.points.includes(\"B\")).map(tile => tile.type);\r\nconst typesMustActive = tileTypes.filter(tile => [16, 17, 18, 19, 20, 21, 22, 23].includes(tile.type)).map(tile => tile.type);\r\n\r\nexport {\r\n    tileTypes,\r\n    typesWithPointLeft,\r\n    typesWithPointRight,\r\n    typesWithPointTop,\r\n    typesWithPointBottom,\r\n    typesMustActive,\r\n}","type EventObserverType = {\r\n    _id: number,\r\n    subscribers: object\r\n}\r\n\r\nexport class EventObserver {\r\n    private _id: number\r\n    public subscribers: Record<string, Function>\r\n\r\n    constructor() {\r\n        this._id = 0;\r\n        this.subscribers = {}\r\n    }\r\n\r\n    on(fn: Function): number {\r\n        this._id++;\r\n        const index: string = `${this._id}`;\r\n        this.subscribers[index] = fn;\r\n        return this._id;\r\n    }\r\n\r\n    off(toDelete: Function): void {\r\n        for (let [key, val] of Object.entries(this.subscribers)) {\r\n            if (val === toDelete) {\r\n                delete this.subscribers[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    emit(...param: any[]): void {\r\n        for (let [key, val] of Object.entries(this.subscribers)) {\r\n            val(...param);\r\n        }\r\n    }\r\n}\r\n\r\n","import {tileTypes, TileType, TilesTypesType} from \"./tile-types\";\r\nimport {EventObserver} from \"./eventObserver\";\r\n\r\ntype DOMType = {\r\n    div: HTMLDivElement,\r\n}\r\n\r\ntype SignalsType = {\r\n    onRotateEnd: EventObserver,\r\n}\r\n\r\nexport class Pipe {\r\n    public signals: SignalsType\r\n    private _check: boolean\r\n    private _icon: string\r\n    private _type: number\r\n    private _points: string\r\n    private _pipeTypesGroup: Array<number>\r\n    private _active: boolean\r\n    private _inactive: boolean\r\n    private _draggable: boolean\r\n    private _DOM: DOMType\r\n\r\n    constructor(params: TileType) {\r\n        this.signals = {\r\n            onRotateEnd: new EventObserver()\r\n        };\r\n\r\n        this._check = false;\r\n        this._icon = params.icon;\r\n        this._type = params.type;\r\n        this._points = this._getPipePoints();\r\n        this._pipeTypesGroup = this._getPipeTypesGroup();\r\n        this._active = params.active;\r\n        this._inactive = params.inactive;\r\n        this._draggable = false;\r\n\r\n        this._DOM = {\r\n            div: Pipe.generateHTML(this._active, this._inactive, this._type)\r\n        };\r\n        this.bindEvents();\r\n    }\r\n\r\n    private _getPipeTypesGroup(): Array<number> {\r\n        const tile: TileType | undefined = tileTypes.find(pipe => pipe.type === this._type);\r\n        if (tile !== undefined) {\r\n            return tile.types\r\n        }\r\n        return []\r\n    }\r\n\r\n    private _getPipePoints(): string {\r\n        const tile: TileType | undefined = tileTypes.find(tile => tile.type === this._type);\r\n        if (tile !== undefined) {\r\n            return tile.points\r\n        }\r\n        return '';\r\n    }\r\n\r\n    changePipe(): void {\r\n        const min = Math.min(...this._pipeTypesGroup);\r\n        const max = Math.max(...this._pipeTypesGroup);\r\n\r\n        this._type++;\r\n\r\n        if (this._type > max) {\r\n            this._type = min;\r\n        }\r\n\r\n        this._pipeTypesGroup = this._getPipeTypesGroup();\r\n        this._points = this._getPipePoints();\r\n        this._DOM.div.dataset.type = `${this._type}`;\r\n    }\r\n\r\n    private _clickOnTile(e: MouseEvent) {\r\n        if (!this._inactive) {\r\n            const rotate = parseInt(getComputedStyle(this._DOM.div).getPropertyValue(\"--rotate\"));\r\n            this._DOM.div.style.setProperty(\"--rotate\", `${rotate + 90}deg`)\r\n\r\n            this.changePipe();\r\n\r\n            this._DOM.div.addEventListener(\"transitionend\", e => {\r\n                this.signals.onRotateEnd.emit(this._DOM.div);\r\n            }, {once: true})\r\n        }\r\n    }\r\n\r\n    static generateHTML(active: boolean, inactive: boolean, type: number) {\r\n        const div = document.createElement(\"div\");\r\n        div.innerHTML = `\r\n            <div class=\"pipe-inside\">\r\n                <div class=\"pipe-active-textures\">\r\n                    <div class=\"pipe-active-texture1\"></div>\r\n                    <div class=\"pipe-active-texture2\"></div>\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n        div.classList.add(\"pipe\");\r\n\r\n        if (active) {\r\n            div.classList.add(\"pipe-active\");\r\n        }\r\n        if (inactive) {\r\n            div.dataset.inactive = `${true}`;\r\n        }\r\n        div.dataset.type = `${type}`;\r\n\r\n        return div;\r\n    }\r\n\r\n    get check() {\r\n        return this._check;\r\n    }\r\n\r\n    set check(isCheck) {\r\n        this._check = isCheck;\r\n    }\r\n\r\n    get points() {\r\n        return this._points;\r\n    }\r\n\r\n    set points(newPoints) {\r\n        this._points = newPoints;\r\n    }\r\n\r\n    set active(isActive) {\r\n        this._active = isActive;\r\n        if (this._active) {\r\n            this._DOM.div.classList.add(\"pipe-active\");\r\n        } else {\r\n            this._DOM.div.classList.remove(\"pipe-active\");\r\n        }\r\n    }\r\n\r\n    get active() {\r\n        return this._active;\r\n    }\r\n\r\n    get div() {\r\n        return this._DOM.div;\r\n    }\r\n\r\n    set inactive(isInactive: boolean) {\r\n        this._DOM.div.dataset.inactive = `${isInactive}`;\r\n        this._inactive = isInactive;\r\n    }\r\n\r\n    set icon(icon) {\r\n        this._icon = icon;\r\n    }\r\n\r\n    get icon() {\r\n        return this._icon;\r\n    }\r\n\r\n    get type() {\r\n        return this._type;\r\n    }\r\n\r\n    get inactive() {\r\n        return this._inactive;\r\n    }\r\n\r\n    set draggable(isDrag) {\r\n        this._DOM.div.draggable = isDrag;\r\n        this._draggable = isDrag;\r\n    }\r\n\r\n    get draggable() {\r\n        return this._draggable;\r\n    }\r\n\r\n    bindEvents(): void {\r\n        this._clickOnTile = this._clickOnTile.bind(this);\r\n        this._DOM.div.addEventListener(\"click\", this._clickOnTile);\r\n    }\r\n\r\n    unbindEvents(): void {\r\n        this._DOM.div.removeEventListener(\"click\", this._clickOnTile);\r\n    }\r\n}","import {EventObserver} from \"./eventObserver\";\r\n\r\ntype SignalsType = {\r\n    dragStart: EventObserver,\r\n    dragEnd: EventObserver,\r\n    dragEnter: EventObserver,\r\n    dragLeave: EventObserver,\r\n    dragDrop: EventObserver,\r\n}\r\n\r\nexport class DragDrop {\r\n    private _element: Node\r\n    private _dropAreas: Array<Node>\r\n    private _areaFrom: Node | null\r\n    private _areaDrop: Node | null\r\n    public signals: SignalsType\r\n\r\n    constructor(dragElement: Node, dropAreas: NodeList) {\r\n        this._element = dragElement;\r\n        this._dropAreas = [...dropAreas];\r\n        this._areaFrom = null;\r\n        this._areaDrop = null;\r\n\r\n        this.signals = {\r\n            dragStart: new EventObserver(),\r\n            dragEnd: new EventObserver(),\r\n            dragEnter: new EventObserver(),\r\n            dragLeave: new EventObserver(),\r\n            dragDrop: new EventObserver(),\r\n        }\r\n\r\n        this.dragStart = this.dragStart.bind(this);\r\n        this.dragEnd = this.dragEnd.bind(this);\r\n        this.dragOver = this.dragOver.bind(this);\r\n        this.dragEnter = this.dragEnter.bind(this);\r\n        this.dragLeave = this.dragLeave.bind(this);\r\n        this.dragDrop = this.dragDrop.bind(this);\r\n    }\r\n\r\n    dragStart(e: DragEvent): void {\r\n        if (e.dataTransfer) {\r\n            e.dataTransfer.effectAllowed = \"move\";\r\n        }\r\n        if (e.target) {\r\n            const target = e.target as HTMLElement\r\n            target.classList.add('dragged');\r\n            this._areaFrom = target.parentElement;\r\n        }\r\n        this._areaDrop = null;\r\n\r\n        document.addEventListener('dragover', this.dragOver);\r\n        document.addEventListener('dragenter', this.dragEnter);\r\n        document.addEventListener('dragleave', this.dragLeave);\r\n        document.addEventListener('drop', this.dragDrop);\r\n\r\n        type emitType = {\r\n            originalEvent: DragEvent\r\n            dragElement: Node | null\r\n            dropAreas: Node[] | null\r\n        }\r\n\r\n        const data: emitType = {\r\n            originalEvent: e,\r\n            dragElement: this._element,\r\n            dropAreas: this._dropAreas\r\n        }\r\n\r\n        this.signals.dragStart.emit(data);\r\n\r\n    }\r\n\r\n    dragEnd(e: DragEvent): void {\r\n        document.removeEventListener('dragover', this.dragOver);\r\n        document.removeEventListener('dragenter', this.dragEnter);\r\n        document.removeEventListener('dragleave', this.dragLeave);\r\n        document.removeEventListener('drop', this.dragDrop);\r\n\r\n        type emitType = {\r\n            originalEvent: DragEvent\r\n            dragElement: Node | null\r\n            areaDrop: Node | null\r\n            areaFrom: Node | null\r\n        }\r\n\r\n        const data: emitType = {\r\n            originalEvent: e,\r\n            dragElement: this._element,\r\n            areaDrop: this._areaDrop,\r\n            areaFrom: this._areaFrom\r\n        }\r\n\r\n        this.signals.dragEnd.emit(data);\r\n    }\r\n\r\n    dragOver(e: DragEvent): void {\r\n        e.preventDefault();\r\n    }\r\n\r\n    dragEnter(e: DragEvent): void {\r\n        e.preventDefault();\r\n        const area = [...this._dropAreas].find(area => area === e.target);\r\n        if (!area) return;\r\n\r\n        type emitType = {\r\n            originalEvent: DragEvent\r\n            dragElement: Node | null\r\n            areaEnter: Node | null\r\n            areaFrom: Node | null\r\n        }\r\n\r\n        const data: emitType = {\r\n            originalEvent: e,\r\n            dragElement: this._element,\r\n            areaEnter: area,\r\n            areaFrom: this._areaFrom\r\n        }\r\n\r\n        this.signals.dragEnter.emit(data);\r\n    }\r\n\r\n    dragLeave(e: DragEvent): void {\r\n        const area = [...this._dropAreas].find(area => area === e.target);\r\n        if (!area) return;\r\n\r\n        type emitType = {\r\n            originalEvent: DragEvent\r\n            dragElement: Node | null\r\n            areaLeave: Node | null\r\n            areaFrom: Node | null\r\n        }\r\n\r\n        const data: emitType = {\r\n            originalEvent: e,\r\n            dragElement: this._element,\r\n            areaLeave: area,\r\n            areaFrom: this._areaFrom\r\n        }\r\n\r\n        this.signals.dragLeave.emit(data);\r\n    }\r\n\r\n    dragDrop(e: DragEvent): void {\r\n        const area = [...this._dropAreas].find(area => area === e.target);\r\n        if (area) {\r\n            this._areaDrop = area;\r\n        }\r\n\r\n        type emitType = {\r\n            originalEvent: DragEvent\r\n            dragElement: Node | null\r\n            areaDrop: Node | null\r\n            areaFrom: Node | null\r\n        }\r\n\r\n        const data: emitType = {\r\n            originalEvent: e,\r\n            dragElement: this._element,\r\n            areaFrom: this._areaFrom,\r\n            areaDrop: this._areaDrop\r\n        }\r\n\r\n        this.signals.dragDrop.emit(data);\r\n    }\r\n\r\n    bindEvents(): void {\r\n        if (this._element) {\r\n            this._element.addEventListener('dragstart', this.dragStart);\r\n            this._element.addEventListener('dragend', this.dragEnd);\r\n        }\r\n    }\r\n\r\n    unbindEvents(): void {\r\n        if (this._element) {\r\n            this._element.removeEventListener('dragstart', this.dragStart);\r\n            this._element.removeEventListener('dragend', this.dragEnd);\r\n        }\r\n    }\r\n}","export class Page {\r\n    constructor() {\r\n    }\r\n\r\n    render() {\r\n    }\r\n\r\n    show() {\r\n    }\r\n\r\n    hide() {\r\n    }\r\n}","/*\r\n{...tileOb, icon: \"x\", points: \"\", inactive: true, type: -1},\r\n{...tileOb, icon: \" \", points: \"\", inactive: true, type: 0},\r\n\r\n\r\n{...tileOb, icon: \"←\", points: \"L\", inactive: true, type: 1, types: [1, 2, 3, 4]},\r\n{...tileOb, icon: \"↑\", points: \"T\", inactive: true, type: 2, types: [1, 2, 3, 4]},\r\n{...tileOb, icon: \"→\", points: \"R\", inactive: true, type: 3, types: [1, 2, 3, 4]},\r\n{...tileOb, icon: \"↓\", points: \"B\", inactive: true, type: 4, types: [1, 2, 3, 4]},\r\n\r\n{...tileOb, icon: \"│\", points: \"TB\", type: 5, types: [5, 6]},\r\n{...tileOb, icon: \"─\", points: \"LR\", type: 6, types: [5, 6]},\r\n\r\n{...tileOb, icon: \"┘\", points: \"LT\", type: 7, types: [7, 8, 9, 10]},\r\n{...tileOb, icon: \"└\", points: \"RT\", type: 8, types: [7, 8, 9, 10]},\r\n{...tileOb, icon: \"┌\", points: \"RB\", type: 9, types: [7, 8, 9, 10]},\r\n{...tileOb, icon: \"┐\", points: \"LB\", type: 10, types: [7, 8, 9, 10]},\r\n\r\n{...tileOb, icon: \"┤\", points: \"LTB\", type: 11, types: [11, 12, 13, 14]},\r\n{...tileOb, icon: \"┴\", points: \"LRT\", type: 12, types: [11, 12, 13, 14]},\r\n{...tileOb, icon: \"├\", points: \"RTB\", type: 13, types: [11, 12, 13, 14]},\r\n{...tileOb, icon: \"┬\", points: \"LRB\", type: 14, types: [11, 12, 13, 14]},\r\n\r\n{...tileOb, icon: \"┼\", points: \"LRTB\", inactive: true, type: 15, types: [15]},\r\n\r\n{...tileOb, icon: \"◄\", points: \"L\", inactive: true, type: 16, types: [16, 17, 18, 19]},\r\n{...tileOb, icon: \"▲\", points: \"T\", inactive: true, type: 17, types: [16, 17, 18, 19]},\r\n{...tileOb, icon: \"►\", points: \"R\", inactive: true, type: 18, types: [16, 17, 18, 19]},\r\n{...tileOb, icon: \"▼\", points: \"B\", inactive: true, type: 19, types: [16, 17, 18, 19]},\r\n\r\n{...tileOb, icon: \"╥\", points: \"B\", inactive: true, type: 20, types: [20, 21, 22, 23]},\r\n{...tileOb, icon: \"╡\", points: \"L\", inactive: true, type: 21, types: [20, 21, 22, 23]},\r\n{...tileOb, icon: \"╨\", points: \"T\", inactive: true, type: 22, types: [20, 21, 22, 23]},\r\n{...tileOb, icon: \"╞\", points: \"R\", inactive: true, type: 23, types: [20, 21, 22, 23]},\r\n\r\n{...tileOb, icon: \"║\", points: \"TB\", inactive: true, type: 24, types: [24, 25]},\r\n{...tileOb, icon: \"═\", points: \"LR\", inactive: true, type: 25, types: [24, 25]},\r\n\r\n{...tileOb, icon: \"╝\", points: \"LT\", inactive: true, type: 26, types: [26, 27, 28, 29]},\r\n{...tileOb, icon: \"╚\", points: \"RT\", inactive: true, type: 27, types: [26, 27, 28, 29]},\r\n{...tileOb, icon: \"╔\", points: \"RB\", inactive: true, type: 28, types: [26, 27, 28, 29]},\r\n{...tileOb, icon: \"╗\", points: \"LB\", inactive: true, type: 29, types: [26, 27, 28, 29]},\r\n\r\n{...tileOb, icon: \"●\", inactive: true, type: 30},\r\n*/\r\n\r\nexport type levelType = {\r\n    pattern: string[][],\r\n    missed: string\r\n}\r\n\r\nexport type levelsType = Array<levelType>\r\n\r\nexport const levels: levelsType = [\r\n    {\r\n        pattern: [\r\n            [\"╔══╝▼\"],\r\n            [\"║xxx│\"],\r\n            [\"╝xxx│\"],\r\n            [\"→│ │┌\"],\r\n        ],\r\n        missed: \"─\"\r\n    },\r\n    {\r\n        pattern: [\r\n            [\"→└┌┴●\"],\r\n            [\"● ┌│●\"],\r\n            [\"●╚│┌●\"],\r\n            [\"●┌┐┌◄\"],\r\n        ],\r\n        missed: \"─\"\r\n    },\r\n    {\r\n        pattern: [\r\n            [\"┌│││╡\"],\r\n            [\"┌─┌│┌\"],\r\n            [\"┌┌║┌┌\"],\r\n            [\"→═ ═◄\"],\r\n        ],\r\n        missed: \"┬\"\r\n    },\r\n    {\r\n        pattern: [\r\n            [\"↓●┌◄╥\"],\r\n            [\"┌┌┌│┤\"],\r\n            [\"└  └┌\"],\r\n            [\"┌●┌┌┌\"],\r\n        ],\r\n        missed: \"┌┌\"\r\n    },\r\n    {\r\n        pattern: [\r\n            [\"  ╥ ◄\"],\r\n            [\" B┘ ●\"],\r\n            [\"   ╚ \"],\r\n            [\"↑● │ \"],\r\n        ],\r\n        missed: \"┌┌┌┌┌┌│┤\"\r\n    },\r\n    {\r\n        pattern: [\r\n            [\"→┌┌│╡\"],\r\n            [\"┌│ │╡\"],\r\n            [\"╞┼ │╡\"],\r\n            [\"╞┌ ┌┌\"],\r\n            [\"╞│┌┌◄\"],\r\n        ],\r\n        missed: \"┤┤┼\"\r\n    },\r\n    {\r\n        pattern: [\r\n            [\"┘┘─└└●╥\"],\r\n            [\"└┘●└└●║\"],\r\n            [\"└└ ╔└● \"],\r\n            [\"└└●└└● \"],\r\n            [\"└╗●└└● \"],\r\n            [\"→ ◄└┤ └\"],\r\n        ],\r\n        missed: \"┴────\"\r\n    },\r\n    {\r\n        pattern: [\r\n            [\"┌│┌  ┌┌\"],\r\n            [\"┌┌┌●●┌┌\"],\r\n            [\"┌┌┌●┌┌┌\"],\r\n            [\"┌┌┌●│┌ \"],\r\n            [\"→┌┌●┌┌▲\"],\r\n        ],\r\n        missed: \"──┐\"\r\n    },\r\n    {\r\n        pattern: [\r\n            [\"└┐─│┐┤┼╥\"],\r\n            [\"┌ ┬ ┌●┌┌\"],\r\n            [\"┌┌●┌│┌┌┌\"],\r\n            [\"┌┌←┌┌●┌│\"],\r\n            [\"┐┌┌┐ ┌┌ \"],\r\n            [\"┌└│─▲┌┌╨\"],\r\n        ],\r\n        missed: \"──┐┤┤\"\r\n    },\r\n    {\r\n        pattern: [\r\n            [\"┌      ╡\"],\r\n            [\"┌      ╡\"],\r\n            [\"→      ◄\"],\r\n            [\"┌      ╡\"],\r\n            [\"┌      ╡\"],\r\n        ],\r\n        missed: \"┤┤┤┤┤┤┐┐┐┐┐┐┐┐┐┐┐┐┐┐┐┐┐┐────\"\r\n    },\r\n];\r\n","import {Pipe} from \"./pipe-class\";\r\nimport {levels} from \"./levels\";\r\nimport {tileTypes, typesMustActive, typesWithPointBottom, typesWithPointLeft, typesWithPointRight, typesWithPointTop} from \"./tile-types\";\r\nimport type {TileType} from \"./tile-types\";\r\nimport {Page} from \"./page-class\";\r\nimport {EventObserver} from \"./eventObserver\";\r\n\r\ntype DOMType = {\r\n    div: HTMLDivElement;\r\n    moves: HTMLDivElement;\r\n    canvas: HTMLCanvasElement;\r\n    trash: HTMLDivElement;\r\n    parts: HTMLDivElement;\r\n}\r\n\r\ntype SignalsType = {\r\n    onMove: EventObserver;\r\n    onLevelStart: EventObserver;\r\n    onLevelEnd: EventObserver;\r\n}\r\n\r\ntype PointType = {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\ntype DateTimeType = {\r\n    days: number;\r\n    hours: number;\r\n    minutes: number;\r\n    seconds: number;\r\n}\r\n\r\nexport class Level extends Page {\r\n    private _DOM: DOMType\r\n    public signals: SignalsType\r\n\r\n    private _moves: number;\r\n    private _levelEnd: boolean; //zmienna przelacznik, by sie spradzanie nie odpalalo kilka razy\r\n    private _startTime: number; //czas gry\r\n    private _levelPattern: Array<string>;\r\n    private _missedPart: string;\r\n    private _level: Pipe[][]\r\n    private _rowCount: number;\r\n    private _colCount: number;\r\n    private _startPoint: PointType; //początek levelu może być tylko jeden\r\n    private _endPoints: Array<PointType>;\r\n\r\n    constructor(levelNr: number) {\r\n        super();\r\n        this.signals = {\r\n            onMove: new EventObserver(),\r\n            onLevelStart: new EventObserver(),\r\n            onLevelEnd: new EventObserver(),\r\n        };\r\n        this._DOM = {\r\n            div: document.createElement(\"div\"),\r\n            moves: document.createElement(\"div\"),\r\n            canvas: document.createElement(\"canvas\"),\r\n            parts: document.createElement(\"div\"),\r\n            trash: document.createElement(\"div\"),\r\n        };\r\n        this._moves = 0;\r\n        this._levelEnd = false; //zmienna przelacznik, by sie spradzanie nie odpalalo kilka razy\r\n        this._startTime = new Date().getTime(); //czas gry\r\n        //this._levelPattern = levels[levelNr].pattern.flat(Infinity);\r\n        const pattern: string[][] = levels[levelNr].pattern;\r\n        this._levelPattern = ([] as string[]).concat(...pattern);\r\n        this._missedPart = levels[levelNr]?.missed;\r\n        this._level = this._parseLevelText();\r\n        this._rowCount = this._level.length;\r\n        this._colCount = this._level[0].length;\r\n        this._startPoint = {x: 0, y: 0}; //początek levelu może być tylko jeden\r\n        this._endPoints = []; //końcówek levelu może być wiele - raczej nie używane, bo i tak spradzam pola z typesMustActive\r\n        this._init();\r\n    }\r\n\r\n    private _generateMissedPipes(): void {\r\n        this._DOM.parts.innerHTML = \"\";\r\n\r\n        if (this._missedPart) {\r\n            const missed: any = {};\r\n\r\n            [...this._missedPart].forEach(char => {\r\n                if (missed[char] === undefined) missed[char] = 0;\r\n                missed[char]++;\r\n            });\r\n\r\n            for (let [key, val] of Object.entries(missed)) {\r\n                const ob = tileTypes.find(ob => ob.icon === key) as TileType;\r\n                const div = Pipe.generateHTML(ob.active, ob.inactive, ob.type) as HTMLDivElement;\r\n                div.draggable = true;\r\n                div.dataset.inactive = `${true}`;\r\n\r\n                const divCnt = document.createElement(\"div\");\r\n                divCnt.classList.add(\"parts-pipe-place\");\r\n                divCnt.dataset.type = `${ob.type}`;\r\n                divCnt.dataset.types = `${ob.types}`;\r\n                divCnt.append(div);\r\n\r\n                const divCntNr = document.createElement(\"div\") as HTMLDivElement;\r\n                divCntNr.classList.add(\"parts-pipe-nr\");\r\n                divCntNr.innerHTML = `${val}`;\r\n                divCnt.append(divCntNr);\r\n\r\n                this._DOM.parts.append(divCnt);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _showMoves(): void {\r\n        this._DOM.moves.innerHTML = `liczba ruchów: ${this._moves}`;\r\n    }\r\n\r\n    private _render(): void {\r\n        this._DOM.div = document.createElement(\"div\");\r\n        this._DOM.div.classList.add(\"level\");\r\n        this._DOM.div.innerHTML = `\r\n            <div class=\"moves\">liczba ruchów: 00</div>\r\n            <div class=\"canvas-cnt\">\r\n                <div class=\"canvas\"></div>\r\n            </div>\r\n            <div class=\"parts-cnt\"></div>\r\n            <div class=\"trash\">\r\n                <span>kosz</span>\r\n            </div>\r\n        `;\r\n        this._DOM.moves = this._DOM.div.querySelector(\".moves\") as HTMLDivElement;\r\n        this._DOM.canvas = this._DOM.div.querySelector(\".canvas\") as HTMLCanvasElement;\r\n        this._DOM.parts = this._DOM.div.querySelector(\".parts-cnt\") as HTMLDivElement;\r\n        this._DOM.trash = this._DOM.div.querySelector(\".trash\") as HTMLDivElement;\r\n\r\n        this._DOM.canvas.style.gridTemplateColumns = `repeat(${this._colCount}, 1fr)`;\r\n        this._DOM.canvas.style.gridTemplateRows = `repeat(${this._rowCount}, 1fr)`;\r\n\r\n        document.body.append(this._DOM.div);\r\n        this._drawElements();\r\n    }\r\n\r\n    private _parseLevelText(): Pipe[][] {\r\n        const level = [];\r\n        let y = 0;\r\n        for (let str of this._levelPattern) {\r\n            let row = [];\r\n            let x = 0;\r\n            for (let letter of str) {\r\n                const tile: TileType | undefined = tileTypes.find(tile => tile.icon === letter);\r\n                if (!tile) {\r\n                    throw Error(\"Zły tile w strukturze levelu\")\r\n                } else {\r\n                    const pipe = new Pipe({...tile});\r\n                    pipe.signals.onRotateEnd.on(() => {\r\n                        this.clickOnTile();\r\n                    });\r\n                    row.push(pipe);\r\n                    x++;\r\n                }\r\n            }\r\n            y++;\r\n            level.push(row);\r\n        }\r\n        return level;\r\n    }\r\n\r\n    private _getEndTime(): DateTimeType {\r\n        const endTime = new Date().getTime();\r\n\r\n        let delta = Math.abs(endTime - this._startTime) / 1000;\r\n\r\n        let days = Math.floor(delta / 86400);\r\n        delta -= days * 86400;\r\n\r\n        let hours = Math.floor(delta / 3600) % 24;\r\n        delta -= hours * 3600;\r\n\r\n        let minutes = Math.floor(delta / 60) % 60;\r\n        delta -= minutes * 60;\r\n\r\n        let seconds = delta % 60;  // in theory the modulus is not required\r\n\r\n        return {\r\n            days, hours, minutes, seconds\r\n        };\r\n    }\r\n\r\n    checkEndLevel(): void {\r\n        let tilesToActive = 0;\r\n        let tilesActive = 0;\r\n\r\n        for (let y = 0; y < this._level.length; y++) {\r\n            for (let x = 0; x < this._level[y].length; x++) {\r\n                const tileToCheck = this._level[y][x];\r\n                if (typesMustActive.includes(tileToCheck.type)) {\r\n                    tilesToActive++;\r\n                    if (tileToCheck.active) tilesActive++;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tilesActive >= tilesToActive) {\r\n            this._levelEnd = true;\r\n\r\n            const {days, hours, minutes, seconds} = this._getEndTime();\r\n\r\n            console.log({\r\n                days, hours, minutes, seconds\r\n            });\r\n\r\n            console.log(\"%cKONIEC\", \"background: gold; color: red;\");\r\n\r\n            setTimeout(() => {\r\n                this.signals.onLevelEnd.emit({\r\n                    moves: this._moves,\r\n                    timeEnd: {days, hours, minutes, seconds}\r\n                })\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    resetTileStatus(): void {\r\n        for (let y = 0; y < this._level.length; y++) {\r\n            for (let x = 0; x < this._level[y].length; x++) {\r\n                const pipe = this._level[y][x];\r\n                pipe.check = false;\r\n                pipe.active = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _drawElements(): void {\r\n        this._DOM.canvas.innerHTML = \"\";\r\n        const fragment = new DocumentFragment();\r\n\r\n        for (let y = 0; y < this._level.length; y++) {\r\n            for (let x = 0; x < this._level[y].length; x++) {\r\n                const divCnt = document.createElement(\"div\");\r\n                divCnt.classList.add(\"pipe-cnt\");\r\n                divCnt.dataset.x = `${x}`;\r\n                divCnt.dataset.y = `${y}`;\r\n                const pipe = this._level[y][x];\r\n                if (pipe.type === 0) {\r\n                    divCnt.classList.add(\"pipe-cnt-place\");\r\n                } else {\r\n                    divCnt.append(pipe.div);\r\n                }\r\n                fragment.append(divCnt);\r\n            }\r\n        }\r\n        this._DOM.canvas.append(fragment)\r\n    }\r\n\r\n    checkPipeConnection(x: number = -1, y: number = -1): boolean {\r\n        if (y < 0) y = this._startPoint.y\r\n        if (x < 0) x = this._startPoint.x\r\n\r\n        const pipe = this._level[y][x];\r\n        pipe.check = true;\r\n        pipe.active = true;\r\n\r\n        if (pipe.points === undefined) return false;\r\n\r\n        for (let point of pipe.points) {\r\n            //w lewo\r\n            if (point === \"L\" && x > 0) {\r\n                const neighbor = this._level[y][x - 1];\r\n                if (!neighbor.check && typesWithPointRight.includes(neighbor.type)) {\r\n                    this.checkPipeConnection(x - 1, y);\r\n                }\r\n            }\r\n            //w prawo\r\n            if (point === \"R\" && x < this._colCount - 1) {\r\n                const neighbor = this._level[y][x + 1];\r\n                if (!neighbor.check && typesWithPointLeft.includes(neighbor.type)) {\r\n                    this.checkPipeConnection(x + 1, y);\r\n                }\r\n            }\r\n            //w gore\r\n            if (point === \"T\" && y > 0) {\r\n                const neighbor = this._level[y - 1][x];\r\n                if (!neighbor.check && typesWithPointBottom.includes(neighbor.type)) {\r\n                    this.checkPipeConnection(x, y - 1);\r\n                }\r\n            }\r\n            //dol\r\n            if (point === \"B\" && y < this._rowCount - 1) {\r\n                const neighbor = this._level[y + 1][x];\r\n                if (!neighbor.check && typesWithPointTop.includes(neighbor.type)) {\r\n                    this.checkPipeConnection(x, y + 1);\r\n                }\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    increaseMoves(): void {\r\n        this._moves++;\r\n        this._showMoves();\r\n        this.signals.onMove.emit(this._moves);\r\n    }\r\n\r\n    clickOnTile(): void {\r\n        this.resetTileStatus();\r\n        this.checkPipeConnection();\r\n        if (!this._levelEnd) {\r\n            this.checkEndLevel();\r\n        }\r\n        this.increaseMoves();\r\n    }\r\n\r\n    get level() {\r\n        return this._level;\r\n    }\r\n\r\n    private _init(): void {\r\n        //find start and end\r\n        for (let y = 0; y < this._level.length; y++) {\r\n            for (let x = 0; x < this._level[y].length; x++) {\r\n                const pipe = this._level[y][x];\r\n                if (\"◄▲►▼\".includes(pipe.icon)) {\r\n                    this._endPoints.push({x, y});\r\n                }\r\n                if (\"←↑→↓\".includes(pipe.icon)) {\r\n                    this._startPoint = {x, y};\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!this._endPoints.length || !this._startPoint) {\r\n            alert(\"Błędne dane we wzorze poziomu!\");\r\n        } else {\r\n            this._render();\r\n            this._generateMissedPipes();\r\n            this.checkPipeConnection();\r\n            this._startTime = new Date().getTime();\r\n            this.signals.onLevelStart.emit(true);\r\n        }\r\n    }\r\n\r\n    destructor(): void {\r\n        this._DOM.div.remove();\r\n    }\r\n}\r\n","import {levels} from \"./levels\";\r\nimport {EventObserver} from \"./eventObserver\";\r\n\r\ntype DOMType = {\r\n    select: HTMLSelectElement,\r\n    button: HTMLButtonElement\r\n}\r\n\r\ntype SignalsType = {\r\n    onChangeValue: EventObserver,\r\n    onButtonClick: EventObserver\r\n}\r\n\r\nexport class Debug {\r\n    signals: SignalsType;\r\n    DOM: DOMType;\r\n\r\n    constructor() {\r\n        this.signals = {\r\n            onChangeValue: new EventObserver(),\r\n            onButtonClick: new EventObserver()\r\n        }\r\n        this.DOM = {\r\n            select: document.createElement(\"select\"),\r\n            button: document.createElement(\"button\")\r\n        }\r\n\r\n        this.render();\r\n    }\r\n\r\n    render(): void {\r\n        this.DOM.select = document.createElement(\"select\")\r\n        this.DOM.select.style.cssText = `\r\n            position:absolute;\r\n            left: 10px;\r\n            bottom: 10px;\r\n            z-index: 1000\r\n        `;\r\n\r\n        levels.forEach((el, i) => {\r\n            const option: HTMLOptionElement = document.createElement(\"option\");\r\n            option.value = `${i}`;\r\n            option.innerHTML = `level ${i + 1}`;\r\n            this.DOM.select.append(option);\r\n        })\r\n\r\n        this.DOM.select.onchange = () => {\r\n            this.signals.onChangeValue.emit(+this.DOM.select.value);\r\n        }\r\n\r\n        this.DOM.button = document.createElement(\"button\");\r\n        this.DOM.button.style.cssText = `\r\n            position: fixed;\r\n            bottom: 35px;\r\n            left: 10px;\r\n            z-index: 1000;\r\n        `;\r\n        this.DOM.button.classList.add(\"debug-button\");\r\n        this.DOM.button.innerHTML = \"Odblokuj poziomy\"\r\n        this.DOM.button.onclick = () => {\r\n            this.signals.onButtonClick.emit(true);\r\n        }\r\n\r\n        document.body.append(this.DOM.select);\r\n        document.body.append(this.DOM.button);\r\n    }\r\n}","import \"/src/scss/style.scss\";\r\nimport {Pipe} from \"./pipe-class\";\r\nimport {DragDrop} from \"./drag-drop-class\";\r\nimport {tileTypes} from \"./tile-types\";\r\nimport {LevelSelect} from \"./level-select-class\";\r\nimport {EndLevelPopup} from \"./end-level-class\";\r\nimport {Level} from \"./level-class\";\r\nimport {Debug} from \"./_debug-class\";\r\nimport {StartPage} from \"./start-page-class\";\r\nimport {levels} from \"./levels\";\r\n\r\nfunction addDebug(e: KeyboardEvent): void {\r\n    if (e.key === \"?\") {\r\n        const debug = new Debug();\r\n        debug.signals.onChangeValue.on((e: number) => {\r\n            startLevel(e);\r\n        });\r\n        debug.signals.onButtonClick.on(() => {\r\n            lastUnlockLevel = levels.length - 1;\r\n\r\n            for (let i = 0; i <= lastUnlockLevel; i++) {\r\n                levelSelect.unlockLevel(i);\r\n            }\r\n        });\r\n        document.removeEventListener(\"keyup\", addDebug);\r\n    }\r\n}\r\n\r\ndocument.addEventListener(\"keyup\", addDebug);\r\n\r\nlet level: any = null;\r\nlet lastUnlockLevel: number = 0;\r\n\r\nfunction startLevel(levelNr: number): void {\r\n    if (level !== null) level.destructor();\r\n    level = new Level(levelNr);\r\n\r\n    level.signals.onLevelEnd.on(() => {\r\n        endLevelPopup.show();\r\n        if (lastUnlockLevel === levelNr) {\r\n            lastUnlockLevel++;\r\n        }\r\n        levelSelect.unlockLevel(lastUnlockLevel);\r\n    });\r\n\r\n    bindDrag();\r\n    levelSelect.hide();\r\n}\r\n\r\nlet levelSelect = new LevelSelect();\r\nlevelSelect.hide();\r\nlevelSelect.signals.onLevelSelect.on((nr: number) => {\r\n    levelSelect.hide();\r\n    startLevel(nr);\r\n})\r\n\r\nlet startPage = new StartPage();\r\nstartPage.signals.onClick.on(() => {\r\n    startPage.destructor();\r\n    levelSelect.show();\r\n})\r\n\r\nconst endLevelPopup = new EndLevelPopup();\r\nendLevelPopup.signals.onButtonClick.on(() => {\r\n    endLevelPopup.hide();\r\n    levelSelect.show();\r\n})\r\n\r\nfunction bindDrag(): void {\r\n    const pipes = document.querySelectorAll(\".parts-cnt .pipe\") as NodeList;\r\n    const areas = document.querySelectorAll(\".pipe-cnt-place\");\r\n\r\n    pipes.forEach(pipe => {\r\n        const dd = new DragDrop(pipe, areas);\r\n        dd.signals.dragStart.on((obj: any) => {\r\n            const dragElement = obj.dragElement;\r\n            const fromDiv = dragElement.parentElement;\r\n            const nr = fromDiv.querySelector(\".parts-pipe-nr\");\r\n            nr.innerHTML--;\r\n            if (nr.innerHTML <= 0) {\r\n                setTimeout(() => {\r\n                    dragElement.classList.add('invisible');\r\n                }, 0);\r\n            }\r\n        });\r\n\r\n        dd.signals.dragEnter.on((obj: any) => {\r\n            const areaEnter = obj.areaEnter;\r\n            const {x, y} = areaEnter.dataset;\r\n            if (level.level[y][x].type === 0) {\r\n                areaEnter.classList.add(\"hovered\")\r\n            }\r\n        });\r\n\r\n        dd.signals.dragEnd.on(() => {\r\n        });\r\n\r\n        dd.signals.dragLeave.on((obj: any) => {\r\n            const areaLeave = obj.areaLeave;\r\n            const {x, y} = areaLeave.dataset;\r\n            if (level.level[y][x].type > 1) {\r\n                areaLeave.classList.add(\"pipe-cnt-place-not-empty\");\r\n            } else {\r\n                areaLeave.classList.remove(\"pipe-cnt-place-not-empty\");\r\n            }\r\n\r\n            areaLeave.classList.remove(\"hovered\");\r\n        });\r\n\r\n        dd.signals.dragDrop.on((obj: any) => {\r\n            const dragElement = obj.dragElement;\r\n            const areaDrop = obj.areaDrop;\r\n            const type = +dragElement.dataset.type;\r\n            const partCnt = dragElement.parentElement;\r\n            const nr = partCnt.querySelector(\".parts-pipe-nr\");\r\n\r\n            if (!areaDrop) {\r\n                nr.innerHTML++;\r\n                dragElement.classList.remove('invisible');\r\n                dragElement.classList.remove('dragged');\r\n                return;\r\n            }\r\n\r\n            areaDrop.classList.remove(\"hovered\");\r\n            areaDrop.classList.add(\"pipe-cnt-place-not-empty\");\r\n\r\n            const {x, y} = areaDrop.dataset;\r\n            const tile = tileTypes.find(tile => tile.type === +type);\r\n            if (tile) {\r\n                const tileObj = {...tile};\r\n                const pipe = new Pipe(tileObj);\r\n                pipe.signals.onRotateEnd.on(() => {\r\n                    level.clickOnTile();\r\n                });\r\n                level.level[y][x] = pipe;\r\n                areaDrop.append(pipe.div);\r\n                level.increaseMoves();\r\n                level.resetTileStatus();\r\n                level.checkPipeConnection();\r\n                level.checkEndLevel();\r\n                pipe.draggable = true;\r\n\r\n                //czy polozone juz rurki powinno sie moc zabierac z planszy albo przestawiac\r\n                //miejscami? - dodatkowo powyzej draggable\r\n                bindElement(pipe.div);\r\n            }\r\n        });\r\n\r\n        dd.bindEvents();\r\n    });\r\n\r\n    function bindElement(element: HTMLElement): void {\r\n        const areas = document.querySelectorAll(\".pipe-cnt-place, .trash\");\r\n        const trash = document.querySelector(\".trash\");\r\n\r\n        const dd = new DragDrop(element, areas);\r\n\r\n        dd.signals.dragStart.on((obj: any) => {\r\n            const dragElement = obj.dragElement;\r\n\r\n            setTimeout(() => {\r\n                dragElement.classList.add('invisible');\r\n                document.body.append(dragElement);\r\n            }, 0);\r\n        });\r\n\r\n        dd.signals.dragEnter.on((obj: any) => {\r\n            const areaEnter = obj.areaEnter;\r\n            areaEnter.classList.add(\"hovered\")\r\n        });\r\n\r\n        dd.signals.dragEnd.on((obj: any) => {\r\n            const dragElement = obj.dragElement;\r\n            const areaFrom = obj.areaFrom;\r\n            const areaDrop = obj.areaDrop;\r\n\r\n            dragElement.classList.remove('invisible');\r\n            dragElement.classList.remove('dragged');\r\n            if (!areaDrop) {\r\n                areaFrom.append(dragElement);\r\n            }\r\n        });\r\n\r\n        dd.signals.dragLeave.on((obj: any) => {\r\n            const areaLeave = obj.areaLeave;\r\n            const areaFrom = obj.areaFrom;\r\n\r\n            areaLeave.classList.remove(\"hovered\");\r\n            areaFrom.classList.remove(\"pipe-cnt-place-not-empty\");\r\n        });\r\n\r\n        dd.signals.dragDrop.on((obj: any) => {\r\n            const dragElement = obj.dragElement;\r\n            const areaFrom = obj.areaFrom;\r\n            const areaDrop = obj.areaDrop;\r\n\r\n            if (areaDrop) {\r\n                areaDrop.classList.remove(\"hovered\");\r\n                areaDrop.classList.add(\"pipe-cnt-place-not-empty\");\r\n\r\n                if (areaDrop === trash) {\r\n                    //zeruje element\r\n                    {\r\n                        const {x, y} = areaFrom.dataset;\r\n                        const tile = tileTypes.find(tile => tile.type === 0);\r\n                        if (tile) {\r\n                            const tileObj = {...tile}\r\n                            const pipe = new Pipe(tileObj);\r\n                            pipe.signals.onRotateEnd.on(() => {\r\n                                level.clickOnTile();\r\n                            });\r\n\r\n                            level.level[y][x] = pipe;\r\n                        }\r\n                    }\r\n                    dragElement.remove();\r\n\r\n                    const type = dragElement.dataset.type;\r\n                    const partsCnt = document.querySelectorAll(\".parts-pipe-place\") as NodeList;\r\n                    const partCnt = [...partsCnt].find((div: any) => div.dataset.types.split(\",\").includes(type)) as HTMLElement;\r\n                    if (partCnt) {\r\n                        const nr = partCnt.querySelector(\".parts-pipe-nr\");\r\n                        if (nr) nr.innerHTML = `${parseInt(nr.innerHTML) + 1}`;\r\n\r\n                        const pipeDiv = partCnt.querySelector(\".pipe\");\r\n                        if (pipeDiv) {\r\n                            pipeDiv.classList.remove('invisible');\r\n                            pipeDiv.classList.remove('dragged');\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n\r\n                const {x, y} = areaDrop.dataset;\r\n                const tileType = level.level[y][x].type;\r\n\r\n                if (areaFrom !== areaDrop && tileType === 0) {\r\n                    //zeruje element na miejscu z ktorego wyciagam\r\n                    {\r\n                        const {x, y} = areaFrom.dataset;\r\n                        const tile = tileTypes.find(tile => tile.type === 0);\r\n                        if (tile) {\r\n                            const tileObj = {...tile}\r\n                            const pipe = new Pipe(tileObj);\r\n                            pipe.signals.onRotateEnd.on(() => {\r\n                                level.clickOnTile();\r\n                            });\r\n                            level.level[y][x] = pipe;\r\n                        }\r\n                    }\r\n\r\n                    //ustawiam na miejscu na ktore wrzucam\r\n                    const {x, y} = areaDrop.dataset;\r\n                    const type = dragElement?.dataset.type;\r\n                    const tile = tileTypes.find(tile => tile.type === +type)\r\n                    if (tile) {\r\n                        const tileObj = {...tile}\r\n                        const pipe = new Pipe(tileObj);\r\n                        pipe.signals.onRotateEnd.on(() => {\r\n                            level.clickOnTile();\r\n                        });\r\n                        level.level[y][x] = pipe;\r\n                        level.increaseMoves();\r\n                        areaDrop.append(pipe.div);\r\n                        pipe.draggable = true;\r\n                        bindElement(pipe.div);\r\n                        level.resetTileStatus();\r\n                        level.checkPipeConnection();\r\n                        level.checkEndLevel();\r\n                    }\r\n                } else {\r\n                    areaFrom.append(dragElement);\r\n                    areaFrom.classList.add(\"pipe-cnt-place-not-empty\");\r\n                }\r\n            } else {\r\n                areaFrom.append(dragElement);\r\n                areaFrom.classList.add(\"pipe-cnt-place-not-empty\");\r\n            }\r\n        });\r\n\r\n        dd.bindEvents();\r\n    }\r\n}\r\n\r\n","import {Page} from \"./page-class\";\r\nimport {levels} from \"./levels\";\r\nimport {EventObserver} from \"./eventObserver\";\r\n\r\ntype DOMType = {\r\n    div: HTMLDivElement,\r\n    buttonsCnt: HTMLDivElement\r\n}\r\n\r\ntype SignalsType = {\r\n    onLevelSelect: EventObserver,\r\n}\r\n\r\nexport class LevelSelect extends Page {\r\n    private _DOM: DOMType\r\n    public signals: SignalsType\r\n    private _levelUnlocked: Array<number>\r\n\r\n    constructor() {\r\n        super();\r\n        this._DOM = {\r\n            div: document.createElement(\"div\"),\r\n            buttonsCnt: document.createElement(\"div\"),\r\n        };\r\n        this.signals = {\r\n            onLevelSelect: new EventObserver(),\r\n        };\r\n        this._levelUnlocked = [0]; //levele odblokowane\r\n\r\n        this._render();\r\n        this.hide();\r\n    }\r\n\r\n    private _render(): void {\r\n        this._DOM.div = document.createElement(\"div\");\r\n        this._DOM.div.classList.add(\"level-select\");\r\n        this._DOM.div.innerHTML = `\r\n            <h2 class=\"level-select-title\">\r\n                Wybierz poziom\r\n            </h2>\r\n            <div class=\"level-select-buttons\"></div>\r\n        `;\r\n        this._DOM.buttonsCnt = this._DOM.div.querySelector(\".level-select-buttons\") as HTMLDivElement;\r\n        this._renderButtons();\r\n        document.body.append(this._DOM.div);\r\n    }\r\n\r\n    private _renderButtons(): void {\r\n        this._DOM.buttonsCnt.innerHTML = \"\";\r\n        const fragment = new DocumentFragment();\r\n        levels.forEach((level, i) => {\r\n            const button = document.createElement(\"button\");\r\n            button.classList.add(\"level-select-button\");\r\n            button.disabled = !this._levelUnlocked.includes(i);\r\n            button.innerHTML = `\r\n                <span>poziom</span>\r\n                <strong>${i + 1}</strong>\r\n            `;\r\n            fragment.append(button);\r\n        });\r\n        this._DOM.buttonsCnt.append(fragment);\r\n        this._bindEvents();\r\n    }\r\n\r\n    private _bindEvents(): void {\r\n        const buttons = this._DOM.div.querySelectorAll(\".level-select-button\");\r\n        buttons.forEach((btn, i) => {\r\n            btn.addEventListener(\"click\", () => {\r\n                this.hide();\r\n                this.signals.onLevelSelect.emit(i);\r\n            })\r\n        })\r\n    }\r\n\r\n    show(): void {\r\n        this._DOM.div.style.display = \"flex\";\r\n    }\r\n\r\n    hide(): void {\r\n        this._DOM.div.style.display = \"none\";\r\n    }\r\n\r\n    unlockLevel(levelNr: number): boolean {\r\n        if (!this._levelUnlocked.includes(levelNr)) {\r\n            this._levelUnlocked.push(levelNr);\r\n            this._renderButtons();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}","import {Page} from \"./page-class\";\r\nimport {EventObserver} from \"./eventObserver\";\r\n\r\ntype DOMType = {\r\n    div: HTMLDivElement,\r\n}\r\n\r\ntype SignalsType = {\r\n    onClick: EventObserver,\r\n}\r\n\r\nexport class StartPage extends Page {\r\n    private _DOM: DOMType;\r\n    public signals: SignalsType;\r\n\r\n    constructor() {\r\n        super();\r\n        this._DOM = {\r\n            div: document.createElement(\"div\")\r\n        };\r\n        this.signals = {\r\n            onClick: new EventObserver()\r\n        }\r\n        this._render();\r\n        this._bindEvents();\r\n    }\r\n\r\n    private _clickFn(): void {\r\n        this.signals.onClick.emit(true);\r\n    }\r\n\r\n    private _render(): void {\r\n        this._DOM.div = document.createElement(\"div\");\r\n        this._DOM.div.classList.add(\"start-screen\");\r\n        this._DOM.div.innerHTML = `\r\n            <h2 class=\"start-screen-title\">\r\n                Rurki\r\n            </h2>\r\n            <p class=\"start-screen-text\">\r\n                kliknij aby kontynuować...\r\n            </p>\r\n        `;\r\n        document.body.append(this._DOM.div);\r\n    }\r\n\r\n    private _bindEvents(): void {\r\n        this._clickFn = this._clickFn.bind(this);\r\n        document.addEventListener(\"click\", this._clickFn, {once: true})\r\n    }\r\n\r\n    show(): void {\r\n        this._DOM.div.style.display = \"flex\";\r\n    }\r\n\r\n    hide(): void {\r\n        this._DOM.div.style.display = \"none\";\r\n    }\r\n\r\n    destructor(): void {\r\n        document.removeEventListener(\"click\", this._clickFn);\r\n        this._DOM.div.remove();\r\n    }\r\n}","import {Page} from \"./page-class\";\r\nimport {EventObserver} from \"./eventObserver\";\r\n\r\ntype DOMType = {\r\n    div: HTMLDivElement,\r\n    button: HTMLButtonElement\r\n}\r\n\r\ntype SignalsType = {\r\n    onButtonClick: EventObserver,\r\n}\r\n\r\nexport class EndLevelPopup extends Page {\r\n    private _DOM: DOMType\r\n    public signals: SignalsType\r\n\r\n    constructor() {\r\n        super();\r\n        this.signals = {\r\n            onButtonClick: new EventObserver(),\r\n        };\r\n        this._DOM = {\r\n            div: document.createElement(\"div\"),\r\n            button: document.createElement(\"button\"),\r\n        };\r\n        this._render();\r\n        this._bindEvents();\r\n        this.hide();\r\n    }\r\n\r\n    private _render(): void {\r\n        this._DOM.div = document.createElement(\"div\");\r\n        this._DOM.div.classList.add(\"popup\");\r\n        this._DOM.div.innerHTML = `\r\n            <div class=\"popup-container\">\r\n                <h2 class=\"popup-title\">\r\n                    poziom zakończony\r\n                </h2>\r\n                <button class=\"popup-button\">\r\n                    kontynuuj\r\n                </button>\r\n            </div>\r\n        `;\r\n        this._DOM.button = this._DOM.div.querySelector(\".popup-button\") as HTMLButtonElement;\r\n        document.body.append(this._DOM.div);\r\n    }\r\n\r\n    private _bindEvents(): void {\r\n        this._DOM.button.addEventListener(\"click\", e => {\r\n            this.hide();\r\n            this.signals.onButtonClick.emit(true);\r\n        })\r\n    }\r\n\r\n    show(): void {\r\n        this._DOM.div.style.display = \"flex\";\r\n        document.body.classList.add(\"level-complete\");\r\n    }\r\n\r\n    hide(): void {\r\n        this._DOM.div.style.display = \"none\";\r\n        document.body.classList.remove(\"level-complete\");\r\n    }\r\n}"],"names":["$59d45c1140f6e56d$var$tileOb","check","active","$59d45c1140f6e56d$export$5a156de1a5d2f922","icon","points","inactive","type","types","$59d45c1140f6e56d$export$e5930e64650da300","filter","tile","includes","map","$59d45c1140f6e56d$export$a62acc26c13cc0c1","$59d45c1140f6e56d$export$3bf613846a0cf0f3","$59d45c1140f6e56d$export$bc825928581fb8d1","$59d45c1140f6e56d$export$1172658d640d02a","$57a204754bfaf5b8$export$c6bca8aef4f6673c","constructor","this","_id","subscribers","on","fn","index","off","toDelete","key","val","Object","entries","emit","param","$74b0b502fe87b5ad$export$c6d5e58b58964667","params","signals","onRotateEnd","_check","_icon","_type","_points","_getPipePoints","_pipeTypesGroup","_getPipeTypesGroup","_active","_inactive","_draggable","_DOM","div","generateHTML","bindEvents","find","pipe","undefined","changePipe","min","Math","max","dataset","_clickOnTile","e","rotate","parseInt","getComputedStyle","getPropertyValue","style","setProperty","addEventListener","once","static","document","createElement","innerHTML","classList","add","isCheck","newPoints","isActive","remove","isInactive","draggable","isDrag","bind","unbindEvents","removeEventListener","$163ff6ac12480b21$export$b4a441ca74fcf9d2","dragElement","dropAreas","_element","_dropAreas","_areaFrom","_areaDrop","dragStart","dragEnd","dragEnter","dragLeave","dragDrop","dragOver","dataTransfer","effectAllowed","target","parentElement","data","originalEvent","areaDrop","areaFrom","preventDefault","area","areaEnter","areaLeave","$9159b0fa4d84bf4a$export$6955bcca4cd3539f","render","show","hide","$98df9af08e565472$export$cc32c6afed33d362","pattern","missed","$f794c2adc4b92c6c$export$ca664994d1d54bff","levelNr","super","onMove","onLevelStart","onLevelEnd","moves","canvas","parts","trash","_moves","_levelEnd","_startTime","Date","getTime","_levelPattern","concat","_missedPart","_level","_parseLevelText","_rowCount","length","_colCount","_startPoint","x","y","_endPoints","_init","_generateMissedPipes","forEach","char","ob","divCnt","append","divCntNr","_showMoves","_render","querySelector","gridTemplateColumns","gridTemplateRows","body","_drawElements","level","str","row","letter","Error","clickOnTile","push","_getEndTime","endTime","delta","abs","days","floor","hours","minutes","checkEndLevel","tilesToActive","tilesActive","tileToCheck","seconds","console","log","setTimeout","timeEnd","resetTileStatus","fragment","DocumentFragment","checkPipeConnection","point","neighbor","increaseMoves","alert","destructor","$636bbe2410b26fb5$export$153e5dc2c098b35c","onChangeValue","onButtonClick","DOM","select","button","cssText","el","i","option","value","onchange","onclick","$dc4240e6100248ae$var$addDebug","debug","$dc4240e6100248ae$var$startLevel","$dc4240e6100248ae$var$lastUnlockLevel","$dc4240e6100248ae$var$levelSelect","unlockLevel","$dc4240e6100248ae$var$level","$dc4240e6100248ae$var$endLevelPopup","pipes","querySelectorAll","areas","bindElement","element","dd","obj","tileObj","partCnt","split","nr","pipeDiv","tileType","$dc4240e6100248ae$var$bindDrag","buttonsCnt","onLevelSelect","_levelUnlocked","_renderButtons","disabled","_bindEvents","btn","display","$dc4240e6100248ae$var$startPage","onClick","_clickFn"],"version":3,"file":"index.bd06170d.js.map"}